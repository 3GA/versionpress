diff --git a/wp-db.php b/wp-db.php
index e749f51..bdd872a 100644
--- a/wp-db.php
+++ b/wp-db.php
@@ -598,6 +598,14 @@ class wpdb {
 	private $has_connected = false;
 
 	/**
+	 * Used by VersionPress for restoring last_query, last_error etc. after its hook.
+	 *
+	 * @since VersionPress
+	 * @var array
+	 */
+	private $vp_field_backup = array();
+
+	/**
 	 * Connects to the database server and selects a database
 	 *
 	 * PHP5 style constructor for compatibility with PHP5. Does
@@ -1766,7 +1774,20 @@ class wpdb {
 	 * @return int|false The number of rows inserted, or false on error.
 	 */
 	public function insert( $table, $data, $format = null ) {
-		return $this->_insert_replace_helper( $table, $data, $format, 'INSERT' );
+		$r = $this->_insert_replace_helper( $table, $data, $format, 'INSERT' );
+
+		$this->vp_backup_fields();
+
+		/**
+		 * Fires after the insert query was executed.
+		 *
+		 * @since VersionPress
+		 */
+		do_action( 'wpdb_after_insert', $table, $data );
+
+		$this->vp_restore_fields();
+
+		return $r;
 	}
 
 	/**
@@ -1859,10 +1880,13 @@ class wpdb {
 			return false;
 		}
 
+		$originalData = $data;
 		$data = $this->process_fields( $table, $data, $format );
 		if ( false === $data ) {
 			return false;
 		}
+
+		$originalWhere = $where;
 		$where = $this->process_fields( $table, $where, $where_format );
 		if ( false === $where ) {
 			return false;
@@ -1884,7 +1908,20 @@ class wpdb {
 		$sql = "UPDATE `$table` SET $fields WHERE $conditions";
 
 		$this->check_current_query = false;
-		return $this->query( $this->prepare( $sql, $values ) );
+		$r = $this->query( $this->prepare( $sql, $values ) );
+
+		$this->vp_backup_fields();
+
+		/**
+		 * Fires after the update query was executed.
+		 *
+		 * @since VersionPress
+		 */
+		do_action( 'wpdb_after_update', $table, $originalData, $originalWhere );
+
+		$this->vp_restore_fields();
+
+		return $r;
 	}
 
 	/**
@@ -1908,6 +1945,7 @@ class wpdb {
 			return false;
 		}
 
+		$originalWhere = $where;
 		$where = $this->process_fields( $table, $where, $where_format );
 		if ( false === $where ) {
 			return false;
@@ -1924,7 +1962,21 @@ class wpdb {
 		$sql = "DELETE FROM `$table` WHERE $conditions";
 
 		$this->check_current_query = false;
-		return $this->query( $this->prepare( $sql, $values ) );
+
+		$r = $this->query( $this->prepare( $sql, $values ) );
+
+		$this->vp_backup_fields();
+
+		/**
+		 * Fires after the delete query was executed.
+		 *
+		 * @since VersionPress
+		 */
+		do_action( 'wpdb_after_delete', $table, $originalWhere);
+
+		$this->vp_restore_fields();
+
+		return $r;
 	}
 
 	/**
@@ -3102,4 +3154,30 @@ class wpdb {
 		}
 		return preg_replace( '/[^0-9.].*/', '', $server_info );
 	}
+
+	/**
+	 * @since VersionPress
+	 */
+	private function vp_backup_fields() {
+		$this->vp_field_backup = array(
+			'last_error' => $this->last_error,
+			'last_query' => $this->last_query,
+			'last_result' => $this->last_result,
+			'rows_affected' => $this->rows_affected,
+			'num_rows' => $this->num_rows,
+			'insert_id' => $this->insert_id,
+		);
+	}
+
+	/**
+	 * @since VersionPress
+	 */
+	private function vp_restore_fields() {
+		$this->last_error = $this->vp_field_backup['last_error'];
+		$this->last_query = $this->vp_field_backup['last_query'];
+		$this->last_result = $this->vp_field_backup['last_result'];
+		$this->rows_affected = $this->vp_field_backup['rows_affected'];
+		$this->num_rows = $this->vp_field_backup['num_rows'];
+		$this->insert_id = $this->vp_field_backup['insert_id'];
+	}
 }
